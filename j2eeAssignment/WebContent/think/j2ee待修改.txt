PS:在演示之前先设置一下max_connection，否则会出错！

1：系统判断大致可行是根据地点检测---数据库，model代码；///已完成修改
2：choose_restaurant.java里面的p49,51,53里面的商品最好判断一下开始和结束日期对不对，然后来判断是否需要显示；//已实现
3：choose_commodity.java里面获得优惠之后使用优惠，如果在支付不成功的时候，也是显示优惠已使用的，你可以修改为，在支付成功之后，在修改优惠使用的result；//已完成
4：订单支付成功之后：修改订单状态，修改会员的网银里面的钱数；//已完成
6：订单的自动确认送达很难完成；//已完成
7：自行决定订单送达时间的时候，输入的内容要是整数，不可以不是整数；//已完成---仅提示
8：在密码修改的时候，原本的密码和新的密码最好是加密状态，但是我没有加密；//已完成
9：会员的三个数据显示还没有写好，记得写好；//已写好
10：可以在餐厅的地方添加一个功能：查看餐厅注册审批结果（使用列表显示，注册时间，审批结果）；//已实现
在注册的时候添加一条提示：记住7位ID，可以查看餐厅审批的结果；//已完成
11：餐厅在修改信息的时候，如果没有修改的地方，为空格的地方，就标注为原本的信息；---在写审批的修改的申请的时候就要写上原本的数据；//已实现
12：删除无用的表格和方法，在完成项目之后；//已实现
13：支付成功之后，金额是先给yummy的，如果中途退单，会返回金额给会员和餐厅，结算的时候，仅结算成功的订单，退单的订单不结算；//成功实现
14：查看订单详情的方法和页面---会员可以，餐厅也可以！//已完成
15：
餐厅可以上传图片---本餐厅的介绍图片，餐品的图片等等；
14：
数据显示：
会员：---数据统计
order：显示所有订单；
consume：仅显示成功的订单；
unsubscribe：仅显示退单的订单；
餐厅：---数据统计
order：显示所有订单；
finance：仅显示成功的订单；
unsubscribe：仅显示退单的订单；
15：总结：
删除无用的方法，删除无用的model和class（service层dao层），删除无用的表格；//已完成
删除不太优秀的数据；//已完成
测试系统，找bug---测试的时候，顺便新建正确的数据；//已完成
完成8的要求；//已完成
完成14的要求；//已完成
重新测试系统，另外，在别的浏览器上面也测试一下系统，记得边测便建立数据；//已完成
写“简单文档”等等要求，详见2018大作业的PPT：//已完成
//写j2ee大作业介绍的时候，你可以把自己考虑到的设定都写上去，例如审批的餐厅多个邮箱一起注册怎么办等等；
//写大作业感想：有很多表格的数据没有使用到，设计表格的依据要更加精细化，否则后期会很麻烦；
//边写，边添加功能，例如：密码的加密等等；
//有很多一开始设计的表格到后来都会使用不到，也不知道那些数据如果一开始就存上去，后面会不会有所帮助，或者还是奉行简洁的原则，需要什么就设计什么？
//遗漏了一个查看订单详情的方法，隐含的需求；---后续添加功能
//方法设计的不是很合理，不是很有规律，在写的时候，往前面翻注释的次数很多，很麻烦；
//后续的时候，起名就比较混乱了；
//service层的方法没有设计好，设计的很有dao层的味道，就是还是和数据库耦合的很多，不是很好；
//一开始的时候，尝试的比较少，后来尝试的多了，数据库的data source就拒绝创建新connection了（Too many connections）；
//多次点击同一个功能，数据库的data source就拒绝创建新connection了（Too many connections），然后使用mysql语句修改max_connection；
//修改密码的jsp页面的div太小了；//已完成
//餐厅的修改基本信息---别忘了是审批之后才可以显示的！//已完成
//付款的时候，考虑到付款期间餐厅的商品会更新的情况；//已完成
//退单的时候，退了两倍的钱；---to many connection//已完成
//会员：选择商品错误的时候，再次转回选择商品的页面错误，且似乎第一次选择的情况判断也是错误的；//已完成
//会员：已配送的时候最好无法退单---没有退单按钮；//已完成
//会员：当天的优惠当天就会完成发送（仅当天第一单有使用优惠的资格），所以即使后来会员等级提升，会员优惠也不会补发；
------index页面：
http://localhost:8080/j2eeAssignment/jsps/index.jsp



Linux作业2；
